<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd" [
  <!ENTITY ERROR_GENERAL "net.sourceforge.KToshiba.GeneralError">
]
>
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <interface name="net.sourceforge.KToshiba">
    <doc:doc>
      <doc:description>
        <doc:para>
          net.sourceforge.KToshiba is a DBus interface implemented by KToshiba.
          It allows to change the laptop's internal hardware states, such as the
          keyboard backlight mode (and timeout as well), toggling the touchpad,
          and eco mode led state, etc. if the laptop supports such features.
        </doc:para>
      </doc:description>
    </doc:doc>

    <method name="configFileChanged">
      <doc:doc>
        <doc:description>
          <doc:para>
            Notifies internally of a configuration change.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while notifiying the configuration change</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getTouchPad">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            Get the value of the TouchPad.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the TouchPad.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the TouchPad state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setTouchPad">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            Set the value of the TouchPad.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state of the TouchPad from on to off and viceversa.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the TouchPad state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getECOLed">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            Get the value of the ECO mode led.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the ECO mode led.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the ECO mode led state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setECOLed">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            Set the value of the ECO mode led.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state of the ECO mode led from on to off and viceversa.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the ECO mode led state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getIllumination">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            Get the value of the Illumination led.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the Illumination led.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the Illumination led state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setIllumination">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            Set the value of the Illumination led.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state of the Illumination led from on to off and viceversa.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the Illumination led state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getKBDType">
      <arg name="type" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The value of the keyboard backlight type.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the keyboard backlight type.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the keyboard backlight type</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getKBDMode">
      <arg name="mode" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The value of the keyboard backlight mode.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the keyboard backlight mode of operation.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the keyboard backlight mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setKBDMode">
      <arg name="mode" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The value of the keyboard backlight mode.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Changes the keyboard backlight mode of operation.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while changing the keyboard backlight mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getKBDTimeout">
      <arg name="time" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The timeout of the keyboard backlight.
            Returns -1 when not supported and 0 when keyboard backlight mode is not set to AUTO or TIMER.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the timeout value for the keyboard backlight.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the keyboard backlight timeout</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setKBDTimeout">
      <arg name="time" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The timeout of the keyboard backlight.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the timeout value for the keyboard backlight.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the keyboard backlight timeout</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getUSBSleepCharge">
      <arg name="mode" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The mode of the USB Sleep and Charge.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the charging mode for the USB sleep and charge.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the USB sleep and charge mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setUSBSleepCharge">
      <arg name="mode" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The mode of the USB Sleep and Charge.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the charging mode for the USB sleep and charge.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the USB sleep and charge mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getUSBSleepFunctionsBatLvl">
      <arg name="level" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The battery level to disable the USB sleep functions.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the battery level to disable the USB sleep functions.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the USB sleep functions battery level</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setUSBSleepFunctionsBatLvl">
      <arg name="level" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The battery level to disable the USB sleep functions.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the battery level to disable the USB sleep functions.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the USB sleep functions battery level</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getUSBRapidCharge">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The state of the USB rapid charge.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the USB rapid charge.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the USB rapid charge state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setUSBRapidCharge">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The state of the USB rapid charge.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state value of the USB rapid charge.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the USB rapid charge state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getUSBSleepMusic">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The state of the USB sleep and music.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the USB sleep and music.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the USB sleep and music state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setUSBSleepMusic">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The state of the USB sleep and music.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state of the USB sleep and music.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the USB sleep and music state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getKBDFunctions">
      <arg name="mode" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The mode of the keyboard functions keys.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the mode of the keyboard functions keys.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the keyboard functions keys mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setKBDFunctions">
      <arg name="mode" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The mode of the keyboard functions keys.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the mode of the keyboard functions keys.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the keyboard functions keys mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getPanelPowerON">
      <arg name="state" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The state of the panel power ON.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the state of the panel power ON.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the panel power ON state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setPanelPowerON">
      <arg name="state" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The state of the panel power ON.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the state of the panel power ON.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the panel power ON state</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getUSBThree">
      <arg name="mode" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The mode of the USB  three.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the mode of the USB three.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the USB three mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setUSBThree">
      <arg name="mode" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The mode of the USB three.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the mode of the USB three.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the USB three mode</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="getProtectionLevel">
      <arg name="level" type="i" direction="out">
        <doc:doc>
          <doc:summary>
            The HDD protection level.
            Returns -1 when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Get the HDD protection level.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while getting the HDD protection level</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <method name="setProtectionLevel">
      <arg name="level" type="i" direction="in">
        <doc:doc>
          <doc:summary>
            The HDD protection level.
            Does nothing when not supported.
          </doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>
            Set the HDD protection level.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_GENERAL;">if an error occured while setting the HDD protection level</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

  </interface>
</node>
