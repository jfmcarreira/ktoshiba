#MIN_CONFIG(3.2.0)

AM_INIT_AUTOMAKE(ktoshiba, 0.9)
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

dnl === modular X check - begin ===
have_modular_x=no
PKG_CHECK_MODULES(MODULAR_XORG_XSERVER, [xorg-server])
have_modular_x=yes

if test "$have_modular_x" = "yes"; then
    AC_DEFINE(HAVE_MODULAR_X, 1, [defined if you have a Modular X.Org X Server])
    AC_SUBST(MODULAR_XORG_XSERVER_LIBS)
    AC_SUBST(MODULAR_XORG_XSERVER_CFLAGS)
fi
dnl === modular X check - end ===

dnl === powersave daemon support check - begin ===
AC_ARG_WITH(powersave,
    AS_HELP_STRING([--without-powersave], [build without powersave daemon support (default=yes)]),
    [ac_cv_use_powersave=$withval],
    [ac_cv_use_powersave=no]
)

if test "$ac_cv_use_powersave" = "yes"; then
    AC_CHECK_LIB(powersave_dbus, dbusSendSimpleMessage, [
        PKG_CHECK_MODULES(POWERSAVE, [powersave >= 0.12.2])
        PKG_CHECK_MODULES(POWERSAVE_DBUS, [powersave-dbus >= 0.12.2])
        PKG_CHECK_MODULES(DBUS, [dbus-1 >= 0.33])
        have_powersave=true
    ], [have_powersave=false])

    if test "$have_powersave" = "true"; then
        AC_DEFINE(ENABLE_POWERSAVE, 1, [defined if you have powersave headers and libraries])
    else
        AC_MSG_WARN([You are missing the powersave headers and libraries. The powersave support won't be compiled])
    fi

    AC_SUBST(POWERSAVE_LIBS)
    AC_SUBST(POWERSAVE_DBUS_LIBS)
    AC_SUBST(DBUS_CFLAGS)
    AC_SUBST(DBUS_LIBS)
fi
dnl === powersave daemon support check - end ===

dnl === build ktosh_helper check - begin ===
compile_helper=no
AC_ARG_WITH(helper,
    AS_HELP_STRING([--without-helper], [build without ktosh_helper (default=no)]),
    [compile_helper=$withval],
    [compile_helper=yes]

    if test "$compile_helper" = "yes"; then
        AC_DEFINE(ENABLE_HELPER, 1, [defined if you have ktosh_helper enabled])
    fi
)

AM_CONDITIONAL(with_helper, [test x$compile_helper = xyes])
dnl === build ktosh_helper check - end ===

dnl === libsynaptics support check - begin ===
AC_ARG_WITH(libsynaptics,
    AS_HELP_STRING([--without-libsynaptics], [build without libsynaptics support (default=no)]),
    [ac_cv_use_synaptics=$withval],
    [ac_cv_use_synaptics=yes]
)

if test "$ac_cv_use_synaptics" = "yes"; then
    SYNAPTICS="-lsynaptics"

    AC_DEFINE(ENABLE_SYNAPTICS, 1, [defined if you have libsynaptics support enabled])
    AC_SUBST(SYNAPTICS)
fi
dnl === libsynaptics support check - end ===

dnl === omnibook support check - begin ===
AC_ARG_WITH(omnibook,
    AS_HELP_STRING([--without-omnibook], [build without omnibook support (default=yes)]),
    [ac_cv_use_omnibook=$withval],
    [ac_cv_use_omnibook=no]
)

if test "$ac_cv_use_omnibook" = "yes"; then
    AC_DEFINE(ENABLE_OMNIBOOK, 1, [defined if you have omnibook support enabled])

    if test "$have_modular_x" = "yes"; then
        PKG_CHECK_MODULES(X_LIBRARY, [x11])
        PKG_CHECK_MODULES(XKBFILE, [xkbfile])
        AC_SUBST(X_LIBRARY_CFLAGS)
        AC_SUBST(X_LIBRARY_LIBS)
        AC_SUBST(XKBFILE_LIBS)
    fi
fi

AM_CONDITIONAL(with_keyhandler, [test x$ac_cv_use_omnibook = xyes])
dnl === omnibook support check - end ===
